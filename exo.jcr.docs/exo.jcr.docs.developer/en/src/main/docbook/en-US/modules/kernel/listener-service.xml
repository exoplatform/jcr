<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="Kernel.ListenerService">
  <title>ListenerService</title>

    <para>Basicaly, ListenerService used to store Listeners and broadcast
    events to them.</para>

    <para>ListenerService event broadcasting works in next way - it takes a
    destination listeners and executes event on those listeners.</para>

    <para>But, some events may take a lot of time, so idea to make event
    processing asynchronous is useful.</para>

    <blockquote>
      What do I need to make my listener asynchronous?
    </blockquote>

    <para>- It's very simple, just mark your Listener implementation as
    <classname>@Asynchronous</classname>.</para>

    <programlisting language="java">@Asynchronous
class AsynchListenerWithException&lt;S,D&gt; extends Listener&lt;S,D&gt;
{
   @Override
   public void onEvent(Event&lt;S,D&gt; event) throws Exception
   {
      // some expensive operation
   }
}</programlisting>

    <para>Now, our AsynchListener will be executed in separate thread by
    <classname>ExecutorService</classname>.</para>

    <para>By default, <classname>ExecutoreService</classname> configured with
    thread pool size 1, you can change it in configuration:</para>

    <programlisting language="xml">   &lt;component&gt;
      &lt;key&gt;org.exoplatform.services.listener.ListenerService&lt;/key&gt;
      &lt;type&gt;org.exoplatform.services.listener.ListenerService&lt;/type&gt;

      &lt;init-params&gt;
         &lt;value-param&gt;
            &lt;name&gt;asynchPoolSize&lt;/name&gt;
            &lt;value&gt;5&lt;/value&gt;
         &lt;/value-param&gt;
      &lt;/init-params&gt;

   &lt;/component&gt;</programlisting>
</section>
